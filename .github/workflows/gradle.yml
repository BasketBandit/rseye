name: Java CI/CD with Gradle

on:
  push:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Write application properties
        uses: DamianReeves/write-file-action@v1.0
        with:
          path: ./src/main/resources/application.properties
          contents: |
            ${{ secrets.SPRING_PROPERTIES }}
          write-mode: overwrite

      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'adopt'

      - name: Ensure Gradle is executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
        with:
          arguments: build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy Application (Docker)
        uses: appleboy/ssh-action@v0.1.4
        env:
          TAG: ${{ secrets.DOCKERHUB_TAG }}
        with:
          host: ${{ secrets.LIGHTSAIL_IP }}
          username: ${{ secrets.LIGHTSAIL_USERNAME }}
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          port: ${{ secrets.LIGHTSAIL_PORT }}
          envs: TAG
          script: |
            docker stop $(docker ps -a -q)
            docker rm $(docker ps -a -q)
            docker rmi $(docker images -q)
            docker pull $TAG
            docker run -d -p 80:8080 -v $(pwd):/app/data $TAG
